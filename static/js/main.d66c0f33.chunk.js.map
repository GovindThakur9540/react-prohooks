{"version":3,"sources":["Search.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Search","React","useState","results","setResults","resultList","map","book","title","author_name","join","first_publish_year","key","className","onChange","event","query","url","URL","baseUrl","searchParams","append","fetch","then","response","json","searchBooks","target","value","docs","type","placeholder","Home","useOktaAuth","authState","authService","userText","isAuthenticated","onClick","logout","login","App","to","issuer","clientId","redirectUri","pkce","path","exact","component","LoginCallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAWO,SAASA,IAAU,IAAD,EACSC,IAAMC,SAAS,GADxB,mBACdC,EADc,KACLC,EADK,KASfC,GAAcF,GAAW,IAAIG,KAAI,SAACC,GAAD,OACvC,+BACI,6BAAKA,EAAKC,QACV,6BAAKD,EAAKE,aAAeF,EAAKE,YAAYC,KAAK,QAC/C,6BAAKH,EAAKI,uBAHLJ,EAAKK,QAMhB,OACE,gCACE,qBAAKC,UAAU,eAAf,SACA,uBAAOC,SAhBY,SAACC,IAVnB,SAAqBC,GACxB,IAAMC,EAAM,IAAIC,IAAIC,sCAGpB,OAFAF,EAAIG,aAAaC,OAAO,QAASL,GAE1BM,MAAML,GAAKM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAO5CC,CAAYX,EAAMY,OAAOC,OAAOL,MAAK,SAAAC,GACjCpB,EAAWoB,EAASK,UAcSC,KAAK,OAAOC,YAAY,aAEvD,oBAAIlB,UAAU,KAAd,4BACA,qBAAKA,UAAU,QAAf,SACE,kCACE,gCACE,+BACE,oBAAIA,UAAU,YAAd,mBACA,oBAAIA,UAAU,aAAd,oBACA,oBAAIA,UAAU,WAAd,2BAGJ,gCAAQR,Y,2BCvCX,SAAS2B,IAAQ,IAAD,EACcC,wBAA3BC,EADa,EACbA,UAAWC,EADE,EACFA,YAKbC,EAAWF,EAAUG,gBACvB,gCAAK,mDAAyB,wBAAQC,QAH3B,WAAQH,EAAYI,OAAO,MAGR,uBAC9B,gCAAK,4EAAkD,wBAAQD,QALrD,WAAQH,EAAYK,MAAM,MAKmB,wBAE3D,OAAO,sBAAK3B,UAAU,YAAf,UAA2B,6DAAsCuB,K,OCc3DK,MArBf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,eAAC,gBAAD,WACE,mCACE,mDACA,qBAAIA,UAAU,OAAd,UAAqB,6BAAI,cAAC,OAAD,CAAM6B,GAAG,IAAT,oBAA6B,6BAAI,cAAC,OAAD,CAAMA,GAAG,UAAT,4BAE5D,eAAC,WAAD,CAAUC,OAAO,+CACPC,SAAS,uBACTC,YAAY,iCACZC,MAAM,EAHhB,UAIE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWjB,IAC1C,cAAC,cAAD,CAAae,KAAK,UAAUC,OAAO,EAAMC,UAAWjD,IAClD,cAAC,IAAD,CAAO+C,KAAK,YAAYE,UAAWC,2BCR9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d66c0f33.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst baseUrl = 'http://openlibrary.org';\r\n\r\nexport function searchBooks(query) {\r\n    const url = new URL(baseUrl + '/search.json');\r\n    url.searchParams.append('title', query);\r\n\r\n    return fetch(url).then(response => response.json());\r\n}\r\n\r\nexport function Search() {\r\n    const [results, setResults] = React.useState(0);\r\n\r\n    const handleSearch = (event) => {\r\n    searchBooks(event.target.value).then(response => {\r\n        setResults(response.docs);\r\n    });\r\n    };\r\n\r\n    const resultList = (results || []).map((book) =>\r\n    <tr key={book.key}>\r\n        <td>{book.title}</td>\r\n        <td>{book.author_name && book.author_name.join(', ')}</td>\r\n        <td>{book.first_publish_year}</td>\r\n    </tr>\r\n    );\r\n  return (\r\n    <div>\r\n      <div className=\"search-input\">\r\n      <input onChange={handleSearch} type=\"text\" placeholder=\"Search\"/>\r\n      </div>\r\n      <h1 className=\"h1\">Search Results</h1>\r\n      <div className=\"books\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"title-col\">Title</th>\r\n              <th className=\"author-col\">Author</th>\r\n              <th className=\"year-col\">Pub Year</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{resultList}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nexport function Home() {\r\n  const { authState, authService } = useOktaAuth();\r\n\r\n  const login = () => { authService.login('/'); }\r\n  const logout = () => { authService.logout('/'); }\r\n\r\n  const userText = authState.isAuthenticated\r\n    ? <div><p>You are signed in!</p><button onClick={ logout }>Logout</button></div>\r\n    : <div><p>You need to sign in to use the application!</p><button onClick={ login }>Sign In</button></div>;\r\n\r\n  return <div className=\"page-home\"><h1>Welcome to Books with Hooks</h1>{ userText }</div>;\r\n}","import { Search } from './Search';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { LoginCallback, SecureRoute, Security } from '@okta/okta-react';\nimport { Home } from './Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <header>\n          <div>Books with Hooks</div>\n          <ul className=\"menu\"><li><Link to=\"/\">Home</Link></li><li><Link to=\"/search\">Search</Link></li></ul>\n        </header>\n        <Security issuer='https://dev-78425204.okta.com/oauth2/default'\n                  clientId='0oazdeusyYs7jNwIr5d6'\n                  redirectUri='http://localhost:3000/callback'\n                  pkce={true}>\n          <Route path='/' exact={true} component={Home}/>\n        <SecureRoute path='/search' exact={true} component={Search}/>\n          <Route path='/callback' component={LoginCallback}/>\n        </Security>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}